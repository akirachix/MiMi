
#include "Arduino.h"
#include "Keypad.h"
#include "LiquidCrystal.h"
#include <Stepper.h> // Include the header file
#include <MFRC522.h>

MFRC522 mfrc522(10, 9); // MFRC522 mfrc522(SS_PIN, RST_PIN)
char initial_id[4] = {'1', '2', '3', '4'};  // Variable to store initial id
boolean RFIDMode = true; // boolean to change modes
#define ENABLE 10
#define DIRA 8
#define DIRB 9
//Define "i"
int i;
//defining pins section
//Stepper Connect 1
int stepIN1Pin = 22;
int stepIN2Pin = 24;
int stepIN3Pin = 26;
int stepIN4Pin = 28;
//Stepper Connect 2
int stepIN1Pin1 = 23;
int stepIN2Pin1 = 25;
int stepIN3Pin1 = 27;
int stepIN4Pin1 = 29;
//Stepper Connect 3
int stepIN1Pin2 = 30;
int stepIN2Pin2 = 32;
int stepIN3Pin2 = 34;
int stepIN4Pin2 = 36;
//Stepper Connect 4
int stepIN1Pin3 = 31;
int stepIN2Pin3 = 33;
int stepIN3Pin3 = 35;
int stepIN4Pin3 = 37;
//define steps
int stepsPerRevolution = 2048; // amount of steps per revolution
//define buttons pin ports
const int button1Pin = A0;  // Push Button 1 Analog Pin A0
const int button2Pin = A1;  // Push Button 2 Analog Pin A1
const int button3Pin = A2;  // Push Button 3 Analog Pin A2
const int button4Pin = A3;  // Push Button 4 Analog Pin A3

//define each stepper
// 1
Stepper myStepper0(stepsPerRevolution, stepIN1Pin, stepIN3Pin, stepIN2Pin, stepIN4Pin);
//2
Stepper myStepper1(stepsPerRevolution, stepIN1Pin1, stepIN3Pin1, stepIN2Pin1, stepIN4Pin1);
//3
Stepper myStepper2(stepsPerRevolution, stepIN1Pin2, stepIN3Pin2, stepIN2Pin2, stepIN4Pin2);
//4
Stepper myStepper3(stepsPerRevolution, stepIN1Pin3, stepIN3Pin3, stepIN2Pin3, stepIN4Pin3);

//#define STEPPERSMALL_PIN_STEP 11
//#define STEPPERSMALL_PIN_DIR  10

const byte ROWS = 4; 
const byte COLS = 4; 

char hexaKeys[ROWS][COLS] = {
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};

byte rowPins[ROWS] = {9, 8, 7, 6}; 
byte colPins[COLS] = {5, 4, 3, 2}; 
Keypad customKeypad = Keypad(makeKeymap(hexaKeys), rowPins, colPins, ROWS, COLS); 


#define LCD_ADDRESS 0x3F

#define LCD_ROWS 4
#define LCD_COLUMNS 20
#define SCROLL_DELAY 150
#define BACKLIGHT 255
#define stepperSmallDelayTime  1000
//#define LiquidCrystal lcd20x4;
const int RS = 11, EN = 12, D4 = 2, D5 = 3, D6 = 4, D7 = 5;

LiquidCrystal lcd(RS, EN, D4, D5, D6, D7);


const int timeout = 10000;
char menuOption = 0;
long time0;
int tagUID;

void setup(){
  Serial.begin(9600);
   mfrc522.PCD_Init();
  lcd.begin(20,4); 
  
  pinMode(button1Pin, INPUT);
  pinMode(button2Pin, INPUT);
  pinMode(button3Pin, INPUT);
  pinMode(button4Pin, INPUT);
  // Assign pin output
  pinMode(ENABLE, OUTPUT);
  pinMode(DIRA, OUTPUT);
  pinMode(DIRB,OUTPUT);
  // Assign Stepper Speed
  myStepper0.setSpeed(15);
  myStepper1.setSpeed(15);
  myStepper2.setSpeed(15);
  myStepper3.setSpeed(15);             

}


void loop(){
  int button1State, button2State, button3State, button4State;
  button1State = digitalRead(button1Pin);
  button2State = digitalRead(button2Pin);
  button3State = digitalRead(button3Pin);
  button4State = digitalRead(button4Pin);
  digitalWrite(ENABLE, HIGH);// Set state
 if (RFIDMode == true) {
//    lcd20x4.clear();                          

    delay(1000);
   lcd.print(" Enter your card ");
//     //Reading from the card
    String tag = "";
    for (byte j = 0; j < mfrc522.uid.size; j++)
    {
      tag.concat(String(mfrc522.uid.uidByte[j] < 0x10 ? " 0" : " "));
      tag.concat(String(mfrc522.uid.uidByte[j], HEX));
    }
    tag.toUpperCase();
    //Checking the card
    if (tag.substring(1) == tagUID)
    {
      // If UID of tag is matched.
        lcd.clear();
        lcd.print("Hello, Celine you have 15 pads left");
   
        lcd.clear();
        lcd.print("Enter number of pads you need");
        lcd.setCursor(0, 1);

      for (i=0;i<5;i++);
  // define action when button 1 is pressed
       if (((button1State == LOW) && !(button2State == LOW)))// if we're pushing button 1 OR button 2
    {digitalWrite(DIRA,HIGH); //engage relay
    digitalWrite(DIRB,LOW);
    lcd.clear();
    lcd.setCursor(2, 0);
    lcd.print("Dispensing");
    lcd.setCursor(3, 1);
    lcd.print("Your Item");
    myStepper0.step(stepsPerRevolution); //run motor
    lcd.clear();
    lcd.setCursor(2, 0);
    lcd.print("Please take");
    lcd.setCursor(3, 1);
    lcd.print("Your Item");
    delay(2500);
    lcd.setCursor(0, 0);
    lcd.print("Button State 1");
    lcd.setCursor(2, 1);
    lcd.print("1 2 3 or 4");
    digitalWrite(DIRA,LOW); //disengage relay
   digitalWrite(DIRB,LOW);
  }
  // define action when button 2 is pressed
  if (((button2State == LOW) && !(button1State == LOW)))  // if we're pushing button 1 OR button 2
  {digitalWrite(DIRA,HIGH); //engage relay
   digitalWrite(DIRB,LOW);
    lcd.clear();
    lcd.setCursor(2, 0);
    lcd.print("Dispensing");
    lcd.setCursor(3, 1);
    lcd.print("Your Item");
    myStepper1.step(stepsPerRevolution);//run motor
   lcd.clear();
    lcd.setCursor(2, 0);
    lcd.print("Please take");
    lcd.setCursor(3, 1);
    lcd.print("Your Item");
    delay(2500);
    lcd.setCursor(0, 0);
    lcd.print("Button State 2");
    lcd.setCursor(2, 1);
    lcd.print("1 2 3 or 4");
    digitalWrite(DIRA,LOW); //disengage relay
   digitalWrite(DIRB,LOW);
  }
  // define action when button 3 is pressed
  if (((button3State == LOW) && !(button4State == LOW)))  // if we're pushing button 1 OR button 2
  {digitalWrite(DIRA,HIGH); //engage relay
   digitalWrite(DIRB,LOW);
    lcd.clear();
    lcd.setCursor(2, 0);
    lcd.print("Dispensing");
    lcd.setCursor(3, 1);
    lcd.print("Your Item");
    myStepper2.step(stepsPerRevolution);//run motor
     lcd.clear();
    lcd.setCursor(2, 0);
    lcd.print("Please take");
    lcd.setCursor(3, 1);
    lcd.print("Your Item");
    delay(2500);
    lcd.setCursor(0, 0);
    lcd.print("Button State 3");
    lcd.setCursor(2, 1);
    lcd.print("1 2 3 or 4");
    digitalWrite(DIRA,LOW); //disengage relay
   digitalWrite(DIRB,LOW);
  }
  // define action when button 4 is pressed
  if (((button4State == LOW) && !(button3State == LOW)))  // if we're pushing button 1 OR button 2
  {digitalWrite(DIRA,HIGH); //engage relay
   digitalWrite(DIRB,LOW);
    lcd.clear();
    lcd.setCursor(2, 0);
    lcd.print("Dispensing");
    lcd.setCursor(3, 1);
    lcd.print("Your Item");
    myStepper3.step(-stepsPerRevolution);//run motor
   lcd.clear();
    lcd.setCursor(2, 0);
    lcd.print("Please take");
    lcd.setCursor(3, 1);
    lcd.print("Your Item");
    delay(2500);
    lcd.setCursor(0, 0);
    lcd.print("Button State 4");
    lcd.setCursor(2, 1);
    lcd.print("1 2 3 or 4");
    digitalWrite(DIRA,LOW); //disengage relay
   digitalWrite(DIRB,LOW);
  }

        
      RFIDMode = false; // Make RFID mode false

      
    }
    else
    {
//       If UID of tag is not matched.
        lcd.clear();
        lcd.setCursor(0, 0);
        lcd.print("You are not registered,please go and see the matron");
        lcd.setCursor(0, 1);
        lcd.print("Access Denied");
     
 
      
  }}
}
  
